plot(scored, salary, col=position_fac, pch=20, xlab="scored")
plot(scored, salary, col=position_fac, pch=20, cex=1)
plot(scored, salary, col=position_fac, pch=20, cex=2)
plot(scored, salary, col=position_fac, pch=20, cex=0.5)
plot(scored, salary, col=position_fac, pch=20, cex=0.7)
rep(c(1,2), c(2,3))
player[seq(length(player)-1, 2, by=-2)]
player[-seq(2, len(player), by=2)]
player[-seq(2, length(player), by=2)]
length(player)
position_fac
position_fac <- factor(position)
position_fac
table(position_fac)
table(position_fac.PF)
table(position_fac$PF)
table(position_fac[PF])
PF
levels(position_fac)
table(position_fac$PF)
table(position_fac)
prop.table(table(position_fac))
prop.table(table(position_fac[position == 'SG']))
position_fac[position=='SG']
team[position=='SG']
prop.table(table(team[position=='SG']))
?prop.table
length(team)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
origin <- 'http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data'
destination <- 'abalone.data'
download.file(origin, destination
)
abalone <- read.table("abalone.data", sep = ",")
head(abalone)
tail(abalone)
str(abalone, vec.len = 1)
column_names <- c('Sex', 'Length', 'Diameter', 'Height', 'Whole', 'Shucked', 'Viscera', 'Shell', 'Rings')
column_types <- c('character', 'real', 'real','real','real','real','real','real', 'integer')
abalone <- read.table('abalone.data', sep=',', col.names = column_names, colClasses = column_types)
abalone
column_names <- c('Sex', 'Length', 'Diameter', 'Height', 'Whole', 'Shucked', 'Viscera', 'Shell', 'Rings')
column_types <- c('factor', 'real', 'real','real','real','real','real','real', 'integer')
abalone <- read.table('abalone.data', sep=',', col.names = column_names, colClasses = column_types)
abalone.data <- read.csv('abalone.data', sep=',', col.names = column_names, colClasses = column_types))
abalone.data <- read.csv('abalone.data', sep=',', col.names = column_names, colClasses = column_types)
abalone2 <- read.csv('abalone.data', sep=',', col.names = column_names, colClasses = column_types)
str(abalone2, vec.len=1)
three_rows <- abalone[1:3, ]
three_rows
abalone[seq(1,10,2)]
abalone[abalone$Height < 0.14]
abalone <- read.table('abalone.data', sep=',', col.names = column_names, colClasses = column_types)
abalone[abalone$Height < 0.14]
abalone[abalone$Height < 0.14,]
abalone[,abalone$Height]
abalone[:10,]
abalone
abalone2
abalone10 <- abalone[1:10,]
abalone10
?read.table
str(abalone)
summary(abalone)
?summary
summary
abalone[seq(5,50,5),]
abalone[-5:0,]
abalone[-5:-1,]
abalone[-1:-5,]
abalone[nrow(abalone)-5:nrow(abalone),]
nrow(abalone)
nrow(abalone)-5
abalone[(nrow(abalone)-5):nrow(abalone),]
height14 <- abalone[abalone$Height < 0.14,]
dim(height14)
abalone[abalone$Sex = 'I']
abalone[abalone$Sex == 'I']
abalone[abalone$Sex == I]
abalone$Sex
(abalone$Sex)$I
abalone$Sex[I]
abalone[abalone$Sex = 'I']
abalone[abalone$Sex = 'I';]
abalone[abalone$Sex == 'I';]
abalone[abalone$Sex == 'I',]
infant <- abalone[abalone$Sex == 'I',]
infant
abalone[abalone$Sex == 'F' | abalone$Sex == 'M',]
abalone[col = 'Sex']
abalone[col == 'Sex']
abalone[column_names == 'Sex']
abalone[abalone$Rings > 25 & (column_names == 'Sex' | column_names == 'Rings')]
abalone[abalone$Rings > 25 && (column_names == 'Sex' | column_names == 'Rings')]
abalone[column_names == 'Sex']
abalone[abalone$Rings > 25 && (column_names == 'Sex')]
abalone[abalone$Rings > 25, abalone$Rings]
abalone[abalone$Rings > 25, c('RIngs')]
abalone[abalone$Rings > 25, c('Rings')]
abalone[abalone$Rings > 25, c('Sex', 'Rings')]
abalone[abalone$Rings > 3 && abalone$Rings<6, c('Sex', 'Rings')]
abalone[abalone$Rings > 3 & abalone$Rings < 6, c('Sex', 'Rings')]
abalone[abalone$Rings > 3 & abalone$Rings < 6, c('Sex', 'Rings', 'Diameter')]
abies <- abalone[abalone$Sex == 'I', c('Length', 'Height', 'Diameter')]
abies
abies$Ht_Len <- abies$Height / abies$Length
install.packages("pastecs")
stat.desc(abalone)
library(pastecs)
stat.desc(abalone)
stat.desc(abalone)['max']
stat.desc(abalone)[max]
abies <- abalone[abalone$Sex == 'I', c('Length', 'Height', 'Diameter')]
abies$product <- abalone$Whole * abalone$Shucked
abies$product <- abalone$Whole[abalone$Sex == 'I'] * abalone$Shucked[abalone$Sex == 'I']
abies
abies$Ht_Len <- abies$Height / abies$Length
abies
head(abies)
abies3 <- abies$Height
abies
?log
abies3 <- log(abies$Height)
abies3
head(abies3)
typeof(abies3)
class(abies3)
abalone[order(abies$Height, decreasing=TRUE),]
abalone[order(abies$Height < 0.12, decreasing=TRUE),]
abalone[abies$Height < 0.12 & order(abies$Height, decreasing=TRUE),]
abalone[abies$Height < 0.12 & order(abalone$Height, decreasing=TRUE),]
abalone[abalone$Height < 0.12 & order(abalone$Height, decreasing=TRUE),]
abalone[order(abalone$Height, decreasing=TRUE),][1:5]
abalone[order(abalone$Height, decreasing=TRUE)[1:5],]
abalone[order(abalone$Height, decreasing=TRUE)[1:5], c('Sex', 'Diameter', 'Rings')]
abalone[order(abalone$Height, decreasing=TRUE)[1:5], c('Height', 'Sex', 'Diameter', 'Rings')]
abalone[abalone$Height < 0.12,][order(abalone$Height, decreasing=TRUE),]
abalone[order(abalone$Height, decreasing=TRUE),][abalone$Height < 0.12,]
abalone[abalone$Height < 0.12 & order(abalone$Height, decreasing=TRUE),]
abalone[abalone$Height < 0.12,][order(abalone$Height, decreasing=TRUE),]
tmp <- abalone[abalone$Height < 0.12,]
tmp[order(abalone$Height, decreasing=TRUE),]
tmp <- abalone[abalone$Height < 0.12,]
tmp[order(tmp$Height, decreasing=TRUE),]
tmp <- abalone[abalone$Height < 0.12,]
tmp
tmp[order(tmp$Height, decreasing=TRUE),]
table_sex <- table(abalone$Sex)
barplot(table_sex)
pie(table_sex)
hist(abalone$Diameter)
boxplot(abalone$Diameter, horizontal = TRUE)
plot(abalone$Height)
plot(abalone$Sex)
plot(abalone$Height, abalone$Length)
plot(Sex)
plot(abalone$Height, abalone$Length, abalone$Diameter)
plot(abalone[,c('Height', 'Length')])
plot(abalone[,c('Height', 'Length', 'Diameter')])
plot(abalone[,c('Sex', 'Length')])
plot(abalone[,c('Length', 'Sex')])
plot(abalone[,c('Height', 'Length')], xlab='Height', ylab='Length')
plot.default(abalone[,c('Height', 'Length')], xlab='Height', ylab='Length')
plot.default(log(abalone[,c('Height', 'Length')]), xlab='Height', ylab='Length')
github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
?read.table
?read.csv
read.csv(datafile, header = FALSE, nrows = 10)
str(read.csv(datafile, header = FALSE, nrows = 10), vec.len=1)
read.table(datafile, nrows = 10)
?read.table
read.table(datafile, nrows = 10, sep=',')
read.csv(datafile, colClasses = data_type).size()
read.csv(datafile, colClasses = data_type)
data_type <- c("character", "factor", "factor", "integer", "integer", "integer", "integer", "character", "double", "integer", "integer","integer","integer","integer","integer")
read.csv(datafile, colClasses = data_type).size()
read.csv(datafile, colClasses = data_type)
nba <- read.csv(datafile, colClasses = data_type)
object.size()
object.size(nba)
nba <- read.csv(datafile)
object.size(nba)
nba <- read.csv(datafile, colClasses = data_type)
as.matrix(nba)
hist(nba$salary)
?hist
nba$salary2 <- log(nba$salary)
hist(nba$salary2)
nba$salary2 < -3
sum(nba$salary2 < -3)
min(nba$salary2)
sum(log(nba$salary2) < -3)
min(log(nba$salary2))
nba$salary2 <- nba$salary / 1000000
sum(log(nba$salary2) < -3)
nba
nba[, c('player', 'team')]
nba$salary2 < -3
low <- nba$salary2 < -3
!low
dim(nba[!low])
dim(nba[!low,])
sum(!low)
sum(low)
nba$salary2 <- nba$salary / 1000000
low <- log(nba$salary2) < -3
dim(nba[!low,])
nba <- nba[!low,]
nba[nba$points == 0;]
nba[nba$points == 0,]
nba[nba$points == 0,] <- nba[nba$points == 0,] + 0.1
e0 <- nba$points == 0
nba[e0]
nba[e0,]
e0 <- nba$points == 0
github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
nba <- read.csv(datafile, colClasses = data_type)
data_type <- c("character", "factor", "factor", "integer", "integer", "integer", "integer", "character", "double", "integer", "integer","integer","integer","integer","integer")
nba <- read.csv(datafile, colClasses = data_type)
nba$salary2 <- nba$salary / 1000000
low <- log(nba$salary2) < -3
sum(low)
nba <- nba[!low,]
nba$points == 0
nba[nba$points == 0]
nba[nba$points == 0,]
nba[nba$points == 0, c('points')]
nba[nba$points == 0, c('points')] <- nba[nba$points == 0, c('points')] + 0.1
nba[nba$points == 0,]
age2 <- nba$age
age2[age2<20]
age2[age2>=20]
?cut
cut(age, breaks=c(24, 29))
cut(age2, breaks=c(24, 29))
cut(age2, breaks=c(24, 29), labels="20-24")
age2[cut(age2, breaks=c(24, 29), labels="20-24")]
age2 <- age2[age2>=20]
cut(age2, breaks=c(24, 29), labels="20-24")
cut(age2, breaks=c(24, 29))
cut(age2, breaks=c(25, 30))
cut(age2, breaks=c(24, 29))
cut(age2, breaks=c(19, 24, 29))
cut(age2, breaks=c(20, 25, 30), right=FALSE)
cut(age2, breaks=c(20, 25, 30, max(age2)), right=FALSE)
age2[343]
age2[342]
age2 <- nba$age
age2 <- cut(age2[age2>=20], breaks=c(20, 25, 30, max(age2)), labels = "20-24", "25-29", "30+", right=TRUE)
age2 <- cut(age2[age2>=20], breaks=c(20, 25, 30, max(age2)), right=TRUE)
age2
age2[451]
age2 <- nba$age
length(age2)
age2[age2 >= 20]
length(age2)
age2[age2>=20]
cut(age2, breaks=c(20, 25, 30, max(age2)), right=FALSE)
age2[465]
cut(age2[age2>=20], breaks=c(20, 25, 30, max(age2)), right=FALSE)
length(age2[age2>=20])
age2[age2>=20][341]
cut(age2[age2>=20], breaks=c(20, 25, 30, max(age2)+1), right=FALSE)
age2[age2>=20][341]
cut(age2[age2>=20], breaks=c(20, 25, 30, Inf), right=FALSE)
age2 <- nba$age
age2 <- cut(age2[age2>=20], breaks=c(20, 25, 30, Inf), labels = c("20-24", "25-29", "30+"), right=TRUE)
age2
age2 <- nba$age
cut(age2[age2>=20], breaks=c(20, 25, 30, Inf), labels = c("20-24", "25-29", "30+"), right=TRUE)
age2[age2>=20]
length(age2[age2>=20])
age2[age2>=20][451]
cut(age2[age2>=20], breaks=c(20, 25, 30, Inf), labels = c("20-24", "25-29", "30+"), right=FALSE)
nba$age[nba$age >= 20 & nba$age <= 24]
nba$age[nba$age >= 25 & nba$age <= 29]
nba$age[nba$age >= 30]
age2 <- nba$age
age2 <- cut(age2[age2>=20], breaks=c(20, 25, 30, Inf), labels = c("20-24", "25-29", "30+"), right=FALSE)
palette1 <- c("#D4D62A", "#4F9D66", "#9575AB")
age2["30+"]
age2
age2$30+
age_colors <- age2
age_colors''
age_colors
age2["20-24"]
age2[age2 = "20-24"]
age2[age2 = 20-24]
age2[age2 == 20-24]
age2
age2[age2 == 20-24]
age2[age2 == "20-24"]
age2 == "20-24"
age_colors <- vector(age2)
age_colors <- vector(mode="character", length=length(age2))
age_colors[age2 == "20-24"] = palette1[1]
age_colors[age2 == "25-29"] = palette1[2]
age_colors[age2 == "30+"] = palette1[3]
age_colors
?boxplot
nba$position
install.packages(c("dplyr", "ggplot2"))
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
dat <- read.csv('nba2018-players.csv', stringsAsFactors = FALSE)
github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-labs/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
dat <- read.csv(datafile, stringsAsFactors = FALSE)
dat
three_rows <- slice(dat, 1:3)
three_rows
gt_85 <- filter(dat, height > 85)
gt_85
player_height <- select(dat, player, height)
player_height
?seq
slice(data, seq(10,30,10))
seq(10,30,10)
?slice
slice(data, 10:30:10)
slice(data, c(10, 20))
slice(data, c(10, 20)())
slice(data, 10
)
slice(dat, 10:30:10)
slice(dat, seq(10,30,10))
slice(dat, -5:-1)
slice(dat, -1:-5)
len(dat)
slice(dat, -5:-1)
slice(dat, 1:5)
slice(dat, -(1:5))
slice(dat, length(dat)-5:length(dat))
slice(dat, (length(dat)-5):length(dat))
slice(dat, (length(dat)-4):length(dat))
filter(dat, height<70)
filter(dat, team='GSW')
filter(dat, team=='GSW')
filter(dat, team=='GSW' & position == 'C')
select(filter(dat, team=='LAL'), player)
filter(dat, team=='GSW')
select(filter(dat, team=='GSW' & position=='PG'), player, salary)
select(dat, salary>10000000)
filter(dat, salary>10000000)
select(filter(dat, experience>10 & salary<=10000000), player, age, team)
gsw <- filter(dat, team == 'GSW')
gsw <- select(gsw, player, height, weight)
gsw <- slice(gsw, c(4, 8, 10, 14, 15))
gsw
mutate(gsw, product=height*weight)
log(2)
gsw3 <- mutate(gsw, log_height=log(height), log_weight=log(weight))
gsw3
arrange(filter(dat, height<71), height)
slice(select(arrange(dat, desc(salary)), player, team, salary), 1:5)
summarise(dat, max_height=max(height))
summarise(dat, sd_points3=sd(height))
summarise(dat, sd_points3=sd(points3))
summarise(group_by(dat, team), avg_points=mean(points3))
arrange(summarise(group_by(dat, team), avg_points=mean(points3)), points3)
arrange(summarise(group_by(dat, team), avg_point3s=mean(points3)), avg_points3)
arrange(
summarise(
group_by(dat, position),
avg_height = mean(height),
avg_weight = mean(weight)),
desc(avg_height)
)
arrange(
summarise(
group_by(dat, team),
avg_points3 = mean(points3)),
avg_points3
)
filter(dat, position='PF' & experience >= 5 & experience <= 10)
filter(dat, position=='PF' & experience >= 5 & experience <= 10)
summarise(filter(dat, position=='PF' & experience >= 5 & experience <= 10), avg_age=mean(age), sd_age=sd(age))
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point() + geom_text(player)
ggplot(data = gsw, aes(x = height, y = weight)) + geom_point() + geom_text(aes(label=player))
ggplot(data = gsw, aes(x = height, y = weight)) + geom_text(aes(label=player))
ggplot(data = filter(dat, team='GSW'), aes(x = height, y = weight)) + geom_point() + geom_label(aes(label=player))
ggplot(data = filter(dat, team=='GSW'), aes(x = height, y = weight)) + geom_point() + geom_label(aes(label=player))
ggplot(data=dat, aes(salary)) + geom_density()
ggplot(data=dat, aes(points2)) + geom_histogram(binwidth = 50)
ggplot(data=dat, aes(position)) + geom_bar()
?geom_smooth
github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
library(dplyr)
library(ggplot2)
?read_csv
?read_csv()
?readr
install.packages("readr")
?read_csv
library(readr)
?read_csv
dat <- read_csv(datafile, col_types = data_type)
data_type <- c("character", "character", "factor", "integer", "integer", "integer", "integer", "character", "double", "integer", "integer","integer","integer","integer","integer")
dat <- read_csv(datafile, col_types = data_type)
dat <- read_csv(datafile, col_types=data_type)
data_type <- "ccfiiiicdiiiiii"
dat <- read_csv(datafile, col_types=data_type)
dat
dat$player
f = factor("pc", "pd")
f$pd
data_type <- c("character", "factor", "factor", "integer", "integer", "integer", "integer", "character", "double", "integer", "integer","integer","integer","integer","integer")
nba <- read.csv(datafile, colClasses = data_type)
nba
dat
nba$p
dat$p
?read_csv
read_csv(datafile, col_types=cols_only(player="c", team="c", salary="d", points="d")
)
?read_csv
?read.csv
?read_csv
?read.csv
?read_csv
?read.csv
?read_csv
?tibble
?tibble
team_salaries <- tibble(team=dat$team, total_salary=summarise(group_by(dat, team)), sum(salary))
team_salaries <- tibble(team=dat$team, total_salary=summarise(group_by(dat, team), sum(salary))
)
summarise(group_by(dat, team), sum(salary)))
summarise(group_by(dat, team), sum(salary))
team_salaries <- tibble(team=dat$team, total_salary=select(summarise(group_by(dat, team), totals=sum(salary)), total_s))
team_salaries <- tibble(team=dat$team, total_salary=select(summarise(group_by(dat, team), totals=sum(salary)), totals))
summarise(group_by(dat, team), totals=sum(salary))
select(summarise(group_by(dat, team), totals=sum(salary)), totals)
team_salaries <- tibble(team=dat$team, total_salary=select(summarise(group_by(dat, team), totals=sum(salary)), totals))
summarise(group_by(dat, team), total_salary=sum(salary), mean_salary=mean(salary), median_salary=median(salary))
team_salaries <- arrange(summarise(group_by(dat, team), total_salary=sum(salary), mean_salary=mean(salary), median_salary=median(salary)), desc(total_salary))
ggplot(data=team_salaries, aes(x=team_salaries$team, y=team_salaries$total_salary)) + geom_bar()
ggplot(data=team_salaries, aes(team_salaries$team, team_salaries$total_salary)) + geom_bar()
ggplot(data=team_salaries, aes(team_salaries$team, team_salaries$total_salary)) + geom_bar(stat=identity)
ggplot(data=team_salaries, aes(team_salaries$team, team_salaries$total_salary)) + geom_bar(stat="identity:)
)
d
..
ddd
:
ggplot(data=team_salaries, aes(team_salaries$team, team_salaries$total_salary)) + geom_bar(stat="identity")
ggplot(data=team_salaries, aes(team_salaries$team, team_salaries$total_salary)) + geom_bar(stat="identity") + coord_flip()
ggplot(data=team_salaries, aes(team_salaries$team, team_salaries$total_salary/1000000)) + geom_bar(stat="identity") + xlab("Total Salary (in millions)") + ylab("Team") + coord_flip()
ggplot(data=team_salaries, aes(team_salaries$team, team_salaries$total_salary/1000000)) + geom_bar(stat="identity") + xlab("Total Salary (in millions)") + ylab("Team") + labs(title="NBA Teams Ranked by Total Salary") + coord_flip()
team_salaries <- arrange(summarise(group_by(dat, team), total_salary=sum(salary), mean_salary=mean(salary), median_salary=median(salary)), desc(total_salary))
ggplot(data=team_salaries, aes(team_salaries$team, team_salaries$total_salary/1000000)) + geom_bar(stat="identity") + xlab("Total Salary (in millions)") + ylab("Team") + labs(title="NBA Teams Ranked by Total Salary") + coord_flip()
team_salaries
ggplot(data=team_salaries, aes(reorder(team_salaries$team, -team_salaries$total_salary), team_salaries$total_salary/1000000)) + geom_bar(stat="identity") + xlab("Total Salary (in millions)") + ylab("Team") + labs(title="NBA Teams Ranked by Total Salary") + coord_flip()
ggplot(data=team_salaries, aes(reorder(team_salaries$team, team_salaries$total_salary), team_salaries$total_salary/1000000)) + geom_bar(stat="identity") + xlab("Total Salary (in millions)") + ylab("Team") + labs(title="NBA Teams Ranked by Total Salary") + coord_flip()
?geom_vline
ggplot(data=team_salaries, aes(reorder(team_salaries$team, team_salaries$total_salary), team_salaries$total_salary/1000000)) + geom_bar(stat="identity") + xlab("Total Salary (in millions)") + ylab("Team") + labs(title="NBA Teams Ranked by Total Salary") + coord_flip() + geom_vline(xintercept=mean(team_salaries$total_salary/1000000))
ggplot(data=team_salaries, aes(reorder(team_salaries$team, team_salaries$total_salary), team_salaries$total_salary/1000000)) + geom_bar(stat="identity") + xlab("Total Salary (in millions)") + ylab("Team") + labs(title="NBA Teams Ranked by Total Salary") + coord_flip() + geom_vline(xintercept=100)
ggplot(data=team_salaries, aes(reorder(team_salaries$team, team_salaries$total_salary), team_salaries$total_salary/1000000)) + geom_bar(stat="identity")  + coord_flip() + + xlab("Total Salary (in millions)") + ylab("Team") + labs(title="NBA Teams Ranked by Total Salary") + geom_vline(xintercept=100)
ggplot(data=team_salaries, aes(reorder(team_salaries$team, team_salaries$total_salary), team_salaries$total_salary/1000000)) + geom_bar(stat="identity")  + coord_flip() +  xlab("Total Salary (in millions)") + ylab("Team") + labs(title="NBA Teams Ranked by Total Salary") + geom_vline(xintercept=100)
ggplot(data=team_salaries, aes(reorder(team_salaries$team, team_salaries$total_salary), team_salaries$total_salary/1000000)) + geom_bar(stat="identity")  + coord_flip() +  ylab("Total Salary (in millions)") + xlab("Team") + labs(title="NBA Teams Ranked by Total Salary") + geom_vline(xintercept=100)
ggplot(data=team_salaries, aes(reorder(team_salaries$team, team_salaries$total_salary), team_salaries$total_salary/1000000)) + geom_bar(stat="identity")  +   xlab("Total Salary (in millions)") + ylab("Team") + labs(title="NBA Teams Ranked by Total Salary") + geom_vline(xintercept=100)
ggplot(data=team_salaries, aes(reorder(team_salaries$team, team_salaries$total_salary), team_salaries$total_salary/1000000)) + geom_bar(stat="identity")  + coord_flip() +  ylab("Total Salary (in millions)") + xlab("Team") + labs(title="NBA Teams Ranked by Total Salary") + geom_vline(xintercept=100)
?geom_vline
ggplot(data=team_salaries, aes(reorder(team_salaries$team, team_salaries$total_salary), team_salaries$total_salary/1000000)) + geom_bar(stat="identity")  + coord_flip() +  ylab("Total Salary (in millions)") + xlab("Team") + labs(title="NBA Teams Ranked by Total Salary") + geom_vline(xintercept=100, show.legend = TRUE)
ggplot(data=team_salaries, aes(reorder(team_salaries$team, team_salaries$total_salary), team_salaries$total_salary/1000000)) + geom_bar(stat="identity")  + coord_flip() +  ylab("Total Salary (in millions)") + xlab("Team") + labs(title="NBA Teams Ranked by Total Salary") + geom_vline(yintercept=100, show.legend = TRUE)
ggplot(data=team_salaries, aes(reorder(team_salaries$team, team_salaries$total_salary), team_salaries$total_salary/1000000)) + geom_bar(stat="identity")  + coord_flip() +  ylab("Total Salary (in millions)") + xlab("Team") + labs(title="NBA Teams Ranked by Total Salary") + geom_hline(yintercept=100, show.legend = TRUE)
ggplot(data=team_salaries, aes(reorder(team_salaries$team, team_salaries$total_salary), team_salaries$total_salary/1000000)) + geom_bar(stat="identity")  + coord_flip() +  ylab("Total Salary (in millions)") + xlab("Team") + labs(title="NBA Teams Ranked by Total Salary") + geom_hline(yintercept=mean(team_salaries$total_salary)/1000000, show.legend = TRUE)
ggplot(data=team_salaries, aes(reorder(team_salaries$team, team_salaries$total_salary), team_salaries$total_salary/1000000)) + geom_bar(stat="identity")  + coord_flip() +  ylab("Total Salary (in millions)") + xlab("Team") + labs(title="NBA Teams Ranked by Total Salary") + geom_hline(yintercept=mean(team_salaries$total_salary)/1000000, show.legend = TRUE, color='r')
ggplot(data=team_salaries, aes(reorder(team_salaries$team, team_salaries$total_salary), team_salaries$total_salary/1000000)) + geom_bar(stat="identity")  + coord_flip() +  ylab("Total Salary (in millions)") + xlab("Team") + labs(title="NBA Teams Ranked by Total Salary") + geom_hline(yintercept=mean(team_salaries$total_salary)/1000000, show.legend = TRUE, color='red')
team_points <- arrange(summarise(group_by(dat, team), total_points=sum(points), mean_salary=mean(points), median_salary=median(points)), desc(total_points))
team_salaries %>% inner_join(team_points)
innter_join(team_points, team_salaries, by="team")
inner_join(team_points, team_salaries, by="team")
team_points
team_points <- arrange(summarise(group_by(dat, team), total_points=sum(points), mean_points=mean(points), median_points=median(points)), desc(total_points))
inner_join(team_points, team_salaries, by="team")
a = c(1,2,3,4)
a[0]
a[5]
ord <-c('v','o','l','d','e','m','o','r','t')
lord <-c('v','o','l','d','e','m','o','r','t')
lord[lord %in% c('a', 'e', 'i', 'o', 'u')]
lord[lord == "o"]
paste(lord, collapse ='')
lord[is.na(lord)]
sum(!is.na(lord))
?png
?read.table
?read.csv
?colClasses
?read.table
library(readr)
?read_table
?read_table
?read_csv
setwd("~/Desktop/STAT133/workout/workout01/report")
